!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.reactDiffView=n():e.reactDiffView=n()}(window,function(){return function(e){var n={};function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)t.d(r,i,function(n){return e[n]}.bind(null,i));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=60)}({40:function(e,n,t){"use strict";var r=function(){};e.exports=r},59:function(e,n,t){var r;r={parse:function(e){for(var n,t,r,i,u=[],a=2,o=e.split("\n"),l=o.length,s=0;s<l;){var f=o[s];if(0===f.indexOf("diff --git")){var d=f.slice(11),c=null,p=null;switch(d.indexOf('"')){case-1:c=(w=d.split(" "))[0].slice(2),p=w[1].slice(2);break;case 0:var v=d.indexOf('"',2);c=d.slice(3,v);var h=d.indexOf('"',v+1);p=h<0?d.slice(v+4):d.slice(h+3,-1);break;default:c=(w=d.split(" "))[0].slice(2),p=w[1].slice(3,-1)}n={oldPath:c,newPath:p,hunks:[],oldEndingNewLine:!0,newEndingNewLine:!0},u.push(n);var y,b=null,g=o[s+1];0===g.indexOf("old")&&(n.oldMode=g.slice(9,16),n.newMode=o[s+2].slice(9,16),g=o[(s+=2)+1]),0===g.indexOf("similarity")&&(n.similarity=parseInt(g.split(" ")[2],10),s+=1);e:for(;y=o[++s];){var w;switch((w=y.split(" "))[0]){case"diff":s--;break e;case"index":var x=w[1].split("..");n.oldRevision=x[0],n.newRevision=x[1],w[2]&&(n.oldMode=n.newMode=w[2]),a=5;var m=o[s+1];if(0===m.indexOf("---")){var O=o[s+2];/\s\/dev\/null$/.test(m)?(n.oldPath="/dev/null",b="add"):/\s\/dev\/null$/.test(O)&&(n.newPath="/dev/null",b="delete"),s+=2}break e}b||(b=w[0])}n.type=b||"modify"}else if(0===f.indexOf("Binary"))n.isBinary=!0,n.type=f.indexOf("/dev/null and")>=0?"add":f.indexOf("and /dev/null")>=0?"delete":"modify",a=2,n=null;else if(5===a)if(0===f.indexOf("@@")){var S=/^@@\s+-([0-9]+)(,([0-9]+))?\s+\+([0-9]+)(,([0-9]+))?/.exec(f);t={content:f,oldStart:S[1]-0,newStart:S[4]-0,oldLines:S[3]-0||1,newLines:S[6]-0||1,changes:[]},n.hunks.push(t),r=t.oldStart,i=t.newStart}else{var k=f.slice(0,1),j={content:f.slice(1)};switch(k){case"+":j.type="insert",j.isInsert=!0,j.lineNumber=i,i++;break;case"-":j.type="delete",j.isDelete=!0,j.lineNumber=r,r++;break;case" ":j.type="normal",j.isNormal=!0,j.oldLineNumber=r,j.newLineNumber=i,r++,i++;break;case"\\":var L=t.changes[t.changes.length-1];L.isDelete||(n.newEndingNewLine=!1),L.isInsert||(n.oldEndingNewLine=!1)}j.type&&t.changes.push(j)}s++}return u}},e.exports=r},60:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.addStubHunk=n.parseDiff=void 0;var r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},i=function(){return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,n){var t=[],r=!0,i=!1,u=void 0;try{for(var a,o=e[Symbol.iterator]();!(r=(a=o.next()).done)&&(t.push(a.value),!n||t.length!==n);r=!0);}catch(e){i=!0,u=e}finally{try{!r&&o.return&&o.return()}finally{if(i)throw u}}return t}(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),u=o(t(59)),a=o(t(40));function o(e){return e&&e.__esModule?e:{default:e}}var l=function(e,n){var t="zip"===n.nearbySequences?function(e){var n=e.reduce(function(e,n,t){var r=i(e,3),u=r[0],a=r[1],o=r[2];return a?n.isInsert&&o>=0?(u.splice(o+1,0,n),[u,n,o+2]):(u.push(n),[u,n,n.isDelete&&a.isDelete?o:t]):(u.push(n),[u,n,n.isDelete?t:-1])},[[],null,-1]);return i(n,1)[0]}(e.changes):e.changes;return r({},e,{isPlain:!1,changes:t})},s=(n.parseDiff=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};(0,a.default)(!n.stubHunk,"stubHunk options is deprecated, use addStubHunk function later to add a stub hunk, this function can receive an extra referenceCodeOrLines argument to determine whether stub hunk is required");var t=function(e){if(0===e.indexOf("diff --git"))return e;var n=e.indexOf("\n"),t=e.indexOf("\n",n+1),r=e.slice(0,n),i=e.slice(n+1,t);return["diff --git "+r.slice(4)+" "+i.slice(4),"index 1111111..2222222 100644",e].join("\n")}(e);return u.default.parse(t).map(function(e){return function(e,n){var t=e.hunks.map(function(e){return l(e,n)});return r({},e,{hunks:n.stubHunk?s(t):t})}(e,n)})},n.addStubHunk=function(e,n){if(!e||!e.length)return e;if(!function(){if(!n)return!0;var t="string"==typeof n?n.split("\n"):n,r=e[e.length-1],i=r.oldStart+r.oldLines-1;return t.length>i}())return e;var t=e[e.length-1],r={oldStart:t.oldStart+t.oldLines,oldLines:0,newStart:t.newStart+t.newLines,newLines:0,content:"STUB",changes:[]};return[].concat(function(e){if(Array.isArray(e)){for(var n=0,t=Array(e.length);n<e.length;n++)t[n]=e[n];return t}return Array.from(e)}(e),[r])})}})});
//# sourceMappingURL=parse.js.map